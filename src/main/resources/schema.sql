drop table if exists FRIENDS;

drop table if exists FEED;

drop table if exists GENRES;

drop table if exists GENRE_NAMES;

drop table if exists GENRE_NAMES_DEFAULT;

drop table if exists FILMS_DIRECTOR;

drop table if exists DIRECTORS;

drop table if exists REVIEW_LIKES;

drop table if exists REVIEWS;

drop table if exists LIKES;

drop table if exists FILMS;

drop table if exists MPA;

drop table if exists MPA_DEFAULT;

drop table if exists USERS;


CREATE TABLE IF NOT EXISTS genre_names
(
    genre_id integer generated by default as identity primary key,
    name     varchar(255)
);

CREATE TABLE IF NOT EXISTS mpa
(
    mpa_id integer generated by default as identity primary key,
    name   varchar(255)
);

CREATE TABLE IF NOT EXISTS films
(
    film_id      integer generated by default as identity primary key,
    name         varchar(255),
    description  varchar(255),
    release_date date,
    duration     integer,
    mpa_id       integer references mpa (mpa_id) ON DELETE SET NULL
);

CREATE TABLE IF NOT EXISTS genres
(
    film_id  integer not null references films (film_id) ON DELETE CASCADE,
    genre_id integer not null references genre_names (genre_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, genre_id)
);

CREATE TABLE IF NOT EXISTS users
(
    user_id  integer generated by default as identity primary key,
    email    varchar(255),
    login    varchar(255),
    name     varchar(255),
    birthday date
);

CREATE TABLE IF NOT EXISTS friends
(
    user_id   integer     not null references users (user_id) ON DELETE CASCADE,
    friend_id integer     not null references users (user_id) ON DELETE CASCADE,
    status    varchar(10) not null,
    PRIMARY KEY (user_id, friend_id)
);

CREATE TABLE IF NOT EXISTS likes
(
    film_id integer not null references films (film_id) ON DELETE CASCADE,
    user_id integer not null references users (user_id) ON DELETE CASCADE,
    PRIMARY KEY (film_id, user_id)
);

CREATE TABLE IF NOT EXISTS feed
(
    event_id   integer generated by default as identity primary key,
    user_id    integer not null references users (user_id),
    entity_id  integer,
    time_stamp timestamp default current_timestamp,
    event_type varchar(10),
    operation  varchar(10)
);

CREATE TABLE IF NOT EXISTS directors
(
    director_id  integer generated by default as identity primary key,
    name         varchar(255)
);

CREATE TABLE IF NOT EXISTS films_director
(
    film_id     integer not null references films (film_id) on delete cascade,
    director_id integer not null references directors (director_id) on delete cascade,
    PRIMARY KEY (film_id, director_id)
);

CREATE TABLE IF NOT EXISTS reviews
(
    review_id      integer generated by default as identity primary key,
    content        varchar(500) not null,
    is_positive    boolean not null,
    user_id        integer references users (user_id) on delete cascade,
    film_id        integer references films (film_id) on delete cascade,
    useful         integer default 0
);

CREATE TABLE IF NOT EXISTS review_likes
(
    review_id integer references reviews (review_id) on delete cascade,
    user_id   integer references users (user_id) on delete cascade,
    usefulness integer not null,
    PRIMARY KEY (review_id, user_id)
);